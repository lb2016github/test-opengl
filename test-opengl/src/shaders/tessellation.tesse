#version 410 core

layout(triangles, equal_spacing, ccw) in;

struct TCSOut{
	vec3 w_position;
	vec2 tex_coord;
	vec3 w_normal;
};
struct TESOut{
	vec2 tex_coord;
};

in TCSOut tcs_out[];
out TESOut tes_out;

uniform sampler2D g_sampler_height_map;
uniform float g_height_factor;
uniform mat4 g_vp;

vec3 interpolate_3d(vec3 v0, vec3 v1, vec3 v2){
	return v0 * gl_TessCoord.x + v1 * gl_TessCoord.y + v2 * gl_TessCoord.z;
}

vec2 interpolate_2d(vec2 v0, vec2 v1, vec2 v2){
	return v0 * gl_TessCoord.x + v1 * gl_TessCoord.y + v2 * gl_TessCoord.z;
}

void main(){
	vec3 w_pos = interpolate_3d(tcs_out[0].w_position, tcs_out[1].w_position, tcs_out[2].w_position);
	vec2 tex_coord = interpolate_2d(tcs_out[0].tex_coord, tcs_out[1].tex_coord, tcs_out[2].tex_coord);
	vec3 w_normal = interpolate_3d(tcs_out[0].w_normal, tcs_out[1].w_normal, tcs_out[2].w_normal);
	w_normal = normalize(w_normal);

	float height = texture(g_sampler_height_map, tex_coord).x;
	w_pos += w_normal * height * g_height_factor;

	gl_Position = g_vp * vec4(w_pos, 1);
	tes_out.tex_coord =  tex_coord;
}