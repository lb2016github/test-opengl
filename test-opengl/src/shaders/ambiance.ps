#version 330 core
in vec2 o_tex_coor0;
in vec3 o_normal;
out vec4 out_color;

struct DirectionalLight{
	vec3 color;
	float ambiant_intensity;
	float diffuse_intensity;
	vec3 diffuse_direction;
};

uniform sampler2D g_sampler;
uniform DirectionalLight dir_light;

void main(){
	float diffuse_intensity = dot(normalize(o_normal), -dir_light.diffuse_direction) * dir_light.diffuse_intensity;
	if (diffuse_intensity < 0){
		diffuse_intensity = 0; 
	}
	out_color = texture2D(g_sampler, o_tex_coor0.xy) * vec4(dir_light.color, 1) * (diffuse_intensity + dir_light.ambiant_intensity);
}